<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.admin.member.dao.AdminMemberDao">
	<sql id="searchMember">
		select * from member
		<where>
			<if test="name != ''">
				name like #{name} and
				<if test="phone != ''">
					phone like concat('%',#{phone}) and
					<if test="!weddingdate.toString().substring(0, 10).contains('9999')">
						weddingdate like #{weddingdate} and
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
					<if test="weddingdate.toString().substring(0, 10).contains('9999')">
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
				</if>

				<if test="phone == ''">
					<if test="!weddingdate.toString().substring(0, 10).contains('9999')">
						weddingdate like #{weddingdate} and
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
					<if test="weddingdate.toString().substring(0, 10).contains('9999')">
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
				</if>
			</if>

			<if test="name == ''">
				<if test="phone != ''">
					phone like concat('%',#{phone}) and
					<if test="!weddingdate.toString().substring(0, 10).contains('9999')">
						weddingdate like #{weddingdate} and
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
					<if test="weddingdate.toString().substring(0, 10).contains('9999')">
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
				</if>

				<if test="phone == ''">
					<if test="!weddingdate.toString().substring(0, 10).contains('9999')">
						weddingdate like #{weddingdate} and
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
					<if test="weddingdate.toString().substring(0, 10).contains('9999')">
						<if test="!birthday.toString().substring(0, 10).contains('9999')">
							birthday like #{birthday} and
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
						<if test="birthday.toString().substring(0, 10).contains('9999')">
							<if test="condition != ''">
								condition like #{condition}
								<if test="rank != ''">
								</if>
								<if test="rank == ''">
								</if>
							</if>
							<if test="condition == ''">
								<if test="rank != ''">
									rank like #{rank} and <![CDATA[ condition != '탈퇴' ]]>
								</if>
								<if test="rank == ''">
									<![CDATA[ 1=1 ]]>
								</if>
							</if>
						</if>
					</if>
				</if>
			</if>
		</where>
		order by member_no desc
	</sql>
	<select id="memberList" parameterType="adminMember" resultType="adminMember">
		select * from ( select list.*, rownum as rnum from(
		<include refid="searchMember"></include>
		) list )
		<where>
			<if test="start_row != null and start_row != ''">
				<if test="end_row != null and end_row != ''">
					rnum between #{start_row} and #{end_row}
				</if>
			</if>
		</where>
	</select>

	<!-- 게시물 개수 구하는 쿼리 -->
	<select id="memberListCnt" parameterType="adminMember"
		resultType="int">
		select nvl(count(1),0) from (select list.*, rownum as rnum from (
		<include refid="searchMember"></include>
		) list )
	</select>

	<select id="memberOne" parameterType="int" resultType="adminMember">
		select *
		from member where member_no = #{member_no}
	</select>

	<select id="memberCoupon" parameterType="int" resultType="couponhistory">
		select * from couponhistory where member_no = #{member_no} and <![CDATA[ coupon_status = '사용가능쿠폰' ]]>
		order by couponHistory_no desc
	</select>

	<update id="memberUpdate" parameterType="adminMember">
		update member set
		point=#{point}, rank=#{rank}
		where member_no = #{member_no}
	</update>

	<select id="giveBirthCnt" resultType="adminMember">
		select * from member where <![CDATA[ to_char(birthday,'mm/dd') = to_char(sysdate,'mm/dd') and condition = '활동중']]>
	</select>
	<!-- 생일쿠폰 자동지급 쿼리 -->
	<insert id="giveBirth" parameterType="adminMember">
		insert into
		couponhistory(couponhistory_no,member_no,coupon_name,coupon_start,coupon_end,coupon_status,coupon_discountrate)
		values(couponhistory_seq.nextval,
		#{member_no}, '생일기념쿠폰',
		sysdate,
		sysdate+(select coupon_term
		from coupon where coupon_name =
		'생일기념쿠폰'),'사용가능쿠폰',(select
		coupon_discountRate from coupon where
		coupon_name = '생일기념쿠폰'))
	</insert>

	<select id="giveMarryCnt" resultType="adminMember">
		select * from member where <![CDATA[ to_char(weddingdate,'mm/dd') = to_char(sysdate,'mm/dd') and condition = '활동중' ]]>
	</select>
	<!-- 결혼기념쿠폰 자동지급 쿼리 -->
	<insert id="giveMarry" parameterType="adminMember">
		insert into
		couponhistory(couponhistory_no,member_no,coupon_name,coupon_start,coupon_end,coupon_status,coupon_discountrate)
		values(couponhistory_seq.nextval,
		#{member_no}, '결혼기념쿠폰',
		sysdate,
		sysdate+(select coupon_term
		from coupon where coupon_name =
		'결혼기념쿠폰'),'사용가능쿠폰',(select
		coupon_discountRate from coupon where
		coupon_name = '결혼기념쿠폰'))
	</insert>

	<!-- VIP회원중 사용가능한 vip쿠폰을 보유하지 않은 회원의 번호 구하는 쿼리 -->
	<select id="giveVIPCnt" resultType="adminMember">
		select distinct member_no
		from couponhistory
		where <![CDATA[(member_no in (select member_no from member where (rank='VIP') and (condition = '활동중')))]]>
		and <![CDATA[(member_no not in (select member_no from couponhistory where (coupon_name='VIP쿠폰') and (coupon_status = '사용가능쿠폰')))]]>
	</select>

	<!-- VIP쿠폰 자동지급쿼리 -->
	<insert id="giveVIP" parameterType="adminMember">
		insert into
		couponhistory(couponhistory_no,member_no,coupon_name,coupon_start,coupon_end,coupon_status,coupon_discountrate)
		values(couponhistory_seq.nextval, #{member_no}, 'VIP쿠폰', sysdate,
		sysdate+(select coupon_term from coupon where coupon_name =
		'VIP쿠폰'),'사용가능쿠폰',(select
		coupon_discountRate from coupon where
		coupon_name = 'VIP쿠폰'))
	</insert>

	<!-- 기한만료 쿠폰 자동 삭제 쿼리 -->
	<update id="deleteCoupon">
		update couponhistory
		set coupon_status = '기한만료', deletedate = sysdate
		where <![CDATA[ to_char(coupon_end,'mm/dd') < to_char(sysdate,'mm/dd') ]]>
		and coupon_status = '사용가능쿠폰'
	</update>

	<!-- 회원관리 페이지 쿠폰삭제 쿼리 -->
	<update id="adminDeleteCoupon" parameterType="couponhistory">
		update
		couponhistory
		set coupon_status = '삭제처리쿠폰', deletedate = sysdate where
		member_no = #{member_no} and coupon_name = #{coupon_name}
	</update>

	<!-- 지급 가능 쿠폰 리스트 조회 쿼리 -->
	<select id="couponNameList" parameterType="int" resultType="java.lang.String">
		select coupon_name from coupon where coupon_active=
		<![CDATA['사용가능쿠폰' and coupon_name != '생일기념쿠폰' and coupon_name != '결혼기념쿠폰' and coupon_name != 'VIP쿠폰' ]]>
		<![CDATA[and coupon_name not in (select distinct coupon_name from couponhistory where member_no = #{member_no} and coupon_status = '사용가능쿠폰') ]]>
	</select>

	<!-- 신규 쿠폰 지급 쿼리 -->
	<insert id="newCouponGive" parameterType="couponhistory">
		insert into
		couponhistory(couponhistory_no,member_no,coupon_name,coupon_start,coupon_end,coupon_status,coupon_discountrate)
		values(couponhistory_seq.nextval,
		#{member_no},#{coupon_name},#{coupon_start,jdbcType=DATE},to_date(#{coupon_start,jdbcType=DATE},'yy/MM/dd')+(select
		coupon_term from coupon where
		coupon_name=#{coupon_name}),'사용가능쿠폰',(select
		coupon_discountRate from
		coupon where
		coupon_name=#{coupon_name}))
	</insert>

	<!-- VIP등급으로 자동전환 -->
	<update id="memberRankAutoChange">
		update member
		set rank='VIP'
		<![CDATA[ where point >= 2000 and condition = '활동중' and rank = '일반' ]]>
	</update>
</mapper>

