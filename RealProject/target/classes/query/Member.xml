<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.user.member.dao.MemberDAO">

	<select id="securitySelect" parameterType="String" resultType="security">
		select userid, salt from security_user
		where userId=#{userId}
	</select>
	<insert id="securityInsert" parameterType="security">
		insert into
		security_user(userid, salt)
		values(#{userId}, #{salt})
	</insert>
	<delete id="securityDelete" parameterType="String">
		delete from
		security_user
		where userId = #{userId}
	</delete>
	<select id="memberSelect" parameterType="String" resultType="member">
		select member_no, id, password, name, gender, birthday,
		email, phone,
		address, marriage, weddingdate, job, agreement1,
		agreement2, agreement3
		from
		member
		where id = #{id}
	</select>
	<select id="memberSearchByID" parameterType="member" resultType="String">
		select id
		from
		member
		where id = #{id} and email = #{email}
	</select>
	<select id="memberSearchByName" parameterType="member"
		resultType="String">
		select id from member
		where name = #{name} and email =
		#{email}
	</select>
	<insert id="memberInsert" parameterType="member">
		insert into
		member(member_no, id, password, name, gender, birthday,
		email, phone,
		address, marriage, weddingdate, job, agreement1,
		agreement2,
		agreement3, condition, rank, member_date)
		values(member_seq.nextval,
		#{id},
		#{password}, #{name},
		#{gender},
		#{birthday}, #{email},
		#{phone},
		#{address}, #{marriage},
		<choose>
			<when test="weddingdate.toString().substring(0, 10).contains('9999')"> null, </when>
			<otherwise>
				#{weddingdate},
			</otherwise>
		</choose>
		#{job},
		'1', '1',
		#{agreement3}, '활동중',
		'일반', sysdate)
	</insert>
	<update id="memberUpdate" parameterType="member">
		update member set
		password= #{password} where id=#{id}
	</update>
	<delete id="memberDelete" parameterType="String">
		delete from
		member where
		id = #{id}
	</delete>

	<select id="memberCoupon" parameterType="int" resultType="couponhistory">
		select * from couponhistory where member_no = #{member_no} and <![CDATA[ coupon_status = '사용가능쿠폰' ]]>
		order by couponHistory_no desc
	</select>

	<update id="memberCouponUpdate" parameterType="member">
		update
		couponhistory set
		coupon_status= '사용 완료', discountprice =
		#{agreement2}, useddate
		= sysdate where
		couponhistory_no=#{agreement1}
	</update>

	<select id="memberNoSearch" parameterType="int" resultType="member">
		select *
		from
		member
		where member_no = #{member_no}
	</select>
</mapper>
