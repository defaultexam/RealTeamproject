<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.admin.reservation.dao.AdminReservationDao">

	<!-- 조건설정 -->
	<sql id="searchReservation">
		select book_no, seat_no, member_no, coupon_no from
		booking
		<where>
			<if test="name != '' ">
				(member_no in (select m.member_no from member m, booking b where
				m.member_no = b.member_no and m.name = #{name}) or (book_name like
				#{name}))
				<if test="phone != '' ">
					and (member_no in (select member_no from member where phone like
					concat('%',#{phone})))
					<if test="!searchStart.toString().substring(0,10).contains('9999')">
						and (seat_no in (select s.seat_no from seat s, booking b where
						s.seat_no=b.seat_no and s.seat_date between #{searchStart} and
						#{searchEnd}))
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
					<if test="searchStart.toString().substring(0,10).contains('9999')">
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
				</if>
				<if test="phone == '' ">
					<if test="!searchStart.toString().substring(0,10).contains('9999')">
						and (seat_no in (select s.seat_no from seat s, booking b where
						s.seat_no=b.seat_no and s.seat_date between #{searchStart} and
						#{searchEnd}))
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
					<if test="searchStart.toString().substring(0,10).contains('9999')">
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
				</if>
			</if>
			<if test="name == '' ">
				<if test="phone != '' ">
					(member_no in (select member_no from member where phone like
					concat('%',#{phone})))
					<if test="!searchStart.toString().substring(0,10).contains('9999')">
						and (seat_no in (select s.seat_no from seat s, booking b where
						s.seat_no=b.seat_no and s.seat_date between #{searchStart} and
						#{searchEnd}))
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
					<if test="searchStart.toString().substring(0,10).contains('9999')">
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
				</if>
				<if test="phone == '' ">
					<if test="!searchStart.toString().substring(0,10).contains('9999')">
						(seat_no in (select s.seat_no from seat s, booking b where
						s.seat_no=b.seat_no and s.seat_date between #{searchStart} and
						#{searchEnd}))
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								and (book_condition = '취소' or book_condition =
								'기간만료')
							</if>
							<if test="!book_condition.equals('취소')">
								and book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
					<if test="searchStart.toString().substring(0,10).contains('9999')">
						<if test="book_condition != ''">
							<if test="book_condition.equals('취소')">
								book_condition = '취소' or book_condition = '기간만료'
							</if>
							<if test="!book_condition.equals('취소')">
								book_condition = #{book_condition}
							</if>
						</if>
						<if test="book_condition == ''">
						</if>
					</if>
				</if>
			</if>
		</where>
		order by book_no desc
	</sql>

	<!-- 조건에 맞는 예약내역의 seat_no, member_no, coupon_no 출력 -->
	<select id="reservationNumberList" parameterType="adminreservation"
		resultType="adminreservation">
		select * from (select list.book_no, list.seat_no, list.member_no,
		list.coupon_no, rownum as rnum
		from
		(
		<include refid="searchReservation"></include>
		) list ) dblist
		<where>
			<if test="start_row != null and start_row != ''">
				<if test="end_row != null and end_row != ''">
					rnum between #{start_row} and #{end_row}
				</if>
			</if>
		</where>
		order by book_no desc
	</select>

	<!-- 예약정보 한개뽑기 -->
	<select id="reservationOne" parameterType="adminreservation"
		resultType="adminreservation">
		select book_condition,(select seat_date from seat where
		seat_no = #{seat_no}) seat_date,(select seat_time from seat where
		seat_no =#{seat_no}) seat_time, (select name from member where
		member_no = #{member_no}) name, book_name,
		(select menu_name from menu
		where menu_no = choice_menu1 ) menu_name1,(select
		menu_name from menu
		where menu_no = choice_menu2 ) menu_name2 ,
		(select
		menu_name from menu
		where menu_no = choice_menu3 ) menu_name3 ,
		(select
		menu_name from menu
		where menu_no = choice_menu4 ) menu_name4 ,
		(select
		menu_name from menu
		where menu_no = choice_menu5 ) menu_name5 ,
		(select
		menu_name from menu
		where menu_no = choice_menu6 ) menu_name6 ,
		(select
		menu_name from menu
		where menu_no = choice_menu7 ) menu_name7 ,
		(select
		menu_name from menu
		where menu_no = choice_menu8 ) menu_name8 ,
		book_people, (select
		coupon_name from couponhistory where couponhistory_no =
		#{coupon_no})
		coupon_name,
		pay_way, pay_date, totalPay, book_memo, discount ,
		book_no,
		cancel_condition, cancel_reciver, cancel_bank, cancel_account,
		cancel_total from
		(select * from booking where book_no =
		#{book_no})
	</select>

	<!-- 게시물 개수 구하는 쿼리 -->
	<select id="reservationListCnt" parameterType="adminreservation"
		resultType="int">
		select nvl(count(1),0) from (select list.* from (
		<include refid="searchReservation"></include>
		) list )
	</select>

	<!-- 예약상태 수정 -->
	<update id="reservationEdit" parameterType="adminreservation">
		update booking set
		<if test="book_condition.equals('사용')">
			book_condition = #{book_condition} where book_no =
			#{book_no}
		</if>
		<if test="book_condition.equals('취소')">
			<if test="cancel_reciver.equals('환불불가')">
				book_condition = #{book_condition}, cancel_condition =
				'환불불가',cancel_total =
				#{cancel_total}, cancel_date = sysdate,
				cancel_reciver =
				#{cancel_reciver}, cancel_bank = #{cancel_bank},
				cancel_account =
				#{cancel_account} where book_no =
				#{book_no}
			</if>
			<if test="!cancel_reciver.equals('환불불가')">
				book_condition = #{book_condition}, cancel_condition =
				'환불미완료',cancel_total = #{cancel_total}, cancel_date = sysdate,
				cancel_reciver = #{cancel_reciver}, cancel_bank = #{cancel_bank},
				cancel_account = #{cancel_account} where book_no =
				#{book_no}
			</if>
		</if>
	</update>

	<update id="lateReservationEdit">
		update booking set book_condition = '기간만료', cancel_condition = '환불불가'
		where seat_no in (select
		seat_no from seat where seat_date <![CDATA[< sysdate ) and book_condition = '미사용' ]]>
	</update>

	<!-- 환불상태 수정 -->
	<update id="cancelUpdate" parameterType="adminreservation">
		update booking set
		cancel_condition ='환불완료' where book_no = #{book_no}
	</update>

	<!-- 매일 0 시 예약가능좌석수 생성쿼리 -->
	<insert id="insertSeatFirst">
		insert into seat
		values(seat_seq.nextval,<![CDATA[to_date(to_char(sysdate+15,'yyyy-MM-dd'),'yyyy-MM-dd'),'12:00 ~ 14:00',30)]]>
	</insert>

	<insert id="insertSeatSecond">
		insert into seat
		values(seat_seq.nextval,<![CDATA[to_date(to_char(sysdate+15,'yyyy-MM-dd'),'yyyy-MM-dd'),'17:30 ~ 19:20',40)]]>
	</insert>

	<insert id="insertSeatThird">
		insert into seat
		values(seat_seq.nextval,<![CDATA[to_date(to_char(sysdate+15,'yyyy-MM-dd'),'yyyy-MM-dd'),'20:00 ~ 22:00',50)]]>
	</insert>

	<insert id="insertSeatFourth">
		insert into seat
		values(seat_seq.nextval,<![CDATA[to_date(to_char(sysdate+15,'yyyy-MM-dd'),'yyyy-MM-dd'),'21:15 ~ 23:15',20)]]>
	</insert>


</mapper>
